{
    "AWSTemplateFormatVersion": "2010-09-09", 
    "Description": "Automated Template for Creation of VPC", 
    "Resources": {
        "VPC1": {
            "Type": "AWS::EC2::VPC", 
            "Properties": {
                "CidrBlock": "10.0.0.0/16", 
                "EnableDnsSupport": "false", 
                "EnableDnsHostnames": "false", 
                "InstanceTenancy": "dedicated", 
                "DependsOn": "dep1", 
                "Tags": [
                    {
                        "Key": "Name", 
                        "Value": "VPC1"
                    }, 
                    {
                        "Key": "Region", 
                        "Value": "US"
                    }
                ]
            }
        }, 
        "VPC2": {
            "Type": "AWS::EC2::VPC", 
            "Properties": {
                "CidrBlock": "10.0.1.0/16", 
                "EnableDnsSupport": "false", 
                "EnableDnsHostnames": "false", 
                "InstanceTenancy": "dedicated", 
                "DependsOn": "dep1", 
                "Tags": [
                    {
                        "Key": "Name", 
                        "Value": "VPC2"
                    }, 
                    {
                        "Key": "Region", 
                        "Value": "EU"
                    }
                ]
            }
        }, 
        "Subnet1": {
            "Type": "AWS::EC2::Subnet", 
            "Properties": {
                "CidrBlock": "20.0.0.0/24", 
                "AvailabilityZone": "us-west-2a", 
                "VpcId": {
                    "Ref": "VPC1"
                }, 
                "Tags": [
                    {
                        "Key": "Name", 
                        "Value": "rean-public-1"
                    }
                ]
            }
        }, 
        "GW1": {
            "Type": "AWS::EC2::InternetGateway", 
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name", 
                        "Value": "rean-internet"
                    }
                ]
            }
        }, 
        "myVPNGateway": {
            "Type": "AWS::EC2::VPNGateway", 
            "Properties": {
                "Type": "ipsec.1", 
                "Tags": [
                    {
                        "Key": "key1", 
                        "Value": "value1"
                    }, 
                    {
                        "Key": "key2", 
                        "Value": "value2"
                    }
                ]
            }
        }, 
        "CustomerGateway1": {
            "Type": "AWS::EC2::CustomerGateway", 
            "Properties": {
                "Type": "ipsec.1", 
                "BgpAsn": "64000", 
                "IpAddress": "1.1.1.1", 
                "Tags": [
                    {
                        "Key": "key1", 
                        "Value": "value1"
                    }, 
                    {
                        "Key": "key2", 
                        "Value": "value2"
                    }
                ]
            }
        }, 
        "AttachGateway1": {
            "Type": "AWS::EC2::VPCGatewayAttachment", 
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                }, 
                "InternetGatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        }, 
        "VPNGatewayRouteProp1": {
            "Type": "AWS::EC2::VPNGatewayRoutePropagation", 
            "DependsOn": "AttachVpnGateway", 
            "Properties": {
                "RouteTableIds": [
                    {
                        "Ref": "PrivateRouteTable"
                    }, 
                    "PrivateRouteTable1"
                ], 
                "VpnGatewayId": {
                    "Ref": "VPNGateway"
                }
            }
        }, 
        "aclname1": {
            "Type": "AWS::EC2::NetworkAcl", 
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                }, 
                "Tags": [
                    {
                        "Key": "key1", 
                        "Value": "value1"
                    }, 
                    {
                        "Key": "key2", 
                        "Value": "value2"
                    }
                ]
            }
        }, 
        "subnetaclassoc1": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation", 
            "Properties": {
                "SubnetId": {
                    "Ref": "subnet1"
                }, 
                "NetworkAclId": {
                    "Ref": "aclname1"
                }
            }
        }, 
        "aclentry1": {
            "Type": "AWS::EC2::NetworkAclEntry", 
            "Properties": {
                "NetworkAclId": "acl1", 
                "RuleNumber": "100", 
                "RuleAction": "allow", 
                "Protocol": "-1", 
                "Egress": "true", 
                "CidrBlock": "172.16.0.0/24", 
                "Icmp": {
                    "Code": "-1", 
                    "Type": "-1"
                }, 
                "PortRange": {
                    "From": "53", 
                    "To": "53"
                }
            }
        }, 
        "routetable1": {
            "Type": "AWS::EC2::RouteTable", 
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                }, 
                "Tags": [
                    {
                        "Key": "key1", 
                        "Value": "value1"
                    }, 
                    {
                        "Key": "key2", 
                        "Value": "value2"
                    }
                ]
            }
        }, 
        "route1": {
            "Type": "AWS::EC2::Route", 
            "DependsOn": "attachgateway", 
            "Properties": {
                "RouteTableId": "routetable1", 
                "DestinationCidrBlock": "0.0.0.0/0", 
                "GatewayId": "internetgateway"
            }
        }, 
        "route2": {
            "Type": "AWS::EC2::Route", 
            "DependsOn": "attachondemandaeni1", 
            "Properties": {
                "RouteTableId": "routetable1", 
                "DestinationCidrBlock": "0.0.0.0/0", 
                "NetworkInterfaceId": "ondemandaeni1"
            }
        }, 
        "subnetrtaname1": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation", 
            "Properties": {
                "SubnetId": "subnet1", 
                "RouteTableId": "routetable1"
            }
        }, 
        "SecurityGroup1": {
            "Type": "AWS::EC2::SecurityGroup", 
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                }, 
                "GroupDescription": "Allow All Traffic"
            }
        }, 
        "SGEgress1": {
            "Type": "AWS::EC2::SecurityGroupEgress", 
            "GroupId": {
                "Fn::GetAtt": [
                    "SecurityGroup1", 
                    "GroupId"
                ]
            }, 
            "Properties": {
                "IpProtocol": "tcp", 
                "FromPort": "1", 
                "ToPort": "65535", 
                "DestinationSecurityGroupId": "destinationsg"
            }
        }, 
        "SGingress1": {
            "Type": "AWS::EC2::SecurityGroupIngress", 
            "GroupId": {
                "Fn::GetAtt": [
                    "SecurityGroup1", 
                    "GroupId"
                ]
            }, 
            "Properties": {
                "IpProtocol": "tcp", 
                "FromPort": "1", 
                "ToPort": "65535", 
                "CidrIp": "0.0.0.0/0"
            }
        }, 
        "SGingress2": {
            "Type": "AWS::EC2::SecurityGroupIngress", 
            "GroupId": {
                "Fn::GetAtt": [
                    "SecurityGroup1", 
                    "GroupId"
                ]
            }, 
            "Properties": {
                "IpProtocol": "tcp", 
                "FromPort": "1", 
                "ToPort": "65535", 
                "DestinationSecurityGroupId": "sourcesg"
            }
        }
    }
}